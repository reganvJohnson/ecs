#
# this file is a template for an nginx configuration file. to
# create an actual nginx configuration file the following variables
# need to be replaced
#
#   %API_DOCS_DOMAIN_NAME%
#   %API_DOMAIN_NAME%
#
# in addition, the following keys and certs are expected to be
# volume mapped into the container running nginx
#
#   /etc/nginx/ssl/docs.crt
#   /etc/nginx/ssl/docs.key
#   /etc/nginx/ssl/api.crt
#   /etc/nginx/ssl/api.key
#
# also, it's is expected that /etc/nginx/.htpasswd be volume mapped
# to a file with keys & secrets used to perform authentication
# against non-API-doc requests.
#

#
# http://nginx.org/en/docs/http/ngx_http_limit_req_module.html
# binary ip address = 4-bytes (see http://nginx.org/en/docs/http/ngx_http_limit_conn_module.html)
# so a 1k zone can store 1024 / 4 = 256 entries
#
# we also impose rate limit per key where each key is 32 bytes.
# so (1024 * 1024) / 32 = 32,768 so 32,768 keys per 1MB
#
# assuming round-robin layer 5 (tcp) load balancing in front of
# each machine frontend'ed with this nginx instance, think of
# these resource limits as applying just to this one machine so
# while a 1 request per second rate might seem long, with 10
# machines in the cluster the actual rate at the cluster level
# (ie from the user's POV) is 10 x 1 r/s
#
# together limit_req and limit_conn provide some basic resource
# management/protection of backend services from undesired request
# patterns. we're not really too concerned about requests for
# api docs as this should be super light but we are concerned
# about things like # of concurrent spiders executing as each
# spider is relatively heavy. limit_conn and limit_req provide
# protection against individual client abuse.
# reference - see "limits" section of https://www.nginx.com/blog/tuning-nginx/
#
# for improved resource management it would be better to use
# the max_conns setting but that's only available in the nginx
# commerical version. so, it's probably better to look toward
# iptables (https://help.ubuntu.com/community/IptablesHowTo)
#

limit_req_zone $binary_remote_addr zone=docs_per_ip_rate_limit:1m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api_per_ip_rate_limit:100k rate=1r/s;
limit_req_zone $remote_user zone=api_per_key_rate_limit:1m rate=5r/s;

limit_conn_zone $binary_remote_addr zone=docs_per_ip_conn_limit:1m;
limit_conn_zone $binary_remote_addr zone=api_per_ip_conn_limit:100k;
limit_conn_zone $remote_user zone=api_per_key_conn_limit:1m;

server {
    listen 80;
    root /usr/share/nginx/html;
    index index.html index.htm;
    server_tokens off;
}

server {
    listen          80;
    server_name     %API_DOCS_DOMAIN_NAME%;
    return          301 https://$host$request_uri;
}

server {
    limit_req zone=docs_per_ip_rate_limit;
    limit_conn docs_per_ip_conn_limit 10;

    listen          443 ssl;
    server_name     %API_DOCS_DOMAIN_NAME%;

    ssl on;
    ssl_certificate /etc/nginx/ssl/docs.crt;
    ssl_certificate_key /etc/nginx/ssl/docs.key;

    ssl_session_timeout 5m;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;

    server_tokens off;

    location / {

        proxy_pass            http://apidocs;
        proxy_read_timeout    5m;
        proxy_set_header      Host                $host;
        proxy_set_header      X-Real-IP           $remote_addr;
        proxy_set_header      X-Forwarded-Server  $host;
        proxy_set_header      X-Forwarded-Host    $host;
        proxy_set_header      X-Forwarded-Port    $server_port;
        proxy_set_header      X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header      X-Forwarded-Proto   $scheme;

    }

}

server {
    limit_req zone=api_per_ip_rate_limit;
    limit_req zone=api_per_key_rate_limit;
    limit_conn api_per_ip_conn_limit 5;
    limit_conn api_per_key_conn_limit 25;

    listen          443 ssl;
    server_name     %API_DOMAIN_NAME%;

    ssl on;
    ssl_certificate /etc/nginx/ssl/api.crt;
    ssl_certificate_key /etc/nginx/ssl/api.key;

    ssl_session_timeout 10m;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;

    server_tokens off;

    location / {

        auth_basic "Restricted";
        auth_basic_user_file /etc/nginx/.htpasswd;

        proxy_pass            http://tasks;
        proxy_read_timeout    10m;
        proxy_set_header      Host                $host;
        proxy_set_header      X-Real-IP           $remote_addr;
        proxy_set_header      X-Forwarded-Server  $host;
        proxy_set_header      X-Forwarded-Host    $host;
        proxy_set_header      X-Forwarded-Port    $server_port;
        proxy_set_header      X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header      X-Forwarded-Proto   $scheme;

    }
}
